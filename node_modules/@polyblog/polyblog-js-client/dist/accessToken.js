"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAccessToken = getAccessToken;
exports.getAccessTokenPayload = getAccessTokenPayload;
exports.isAccessTokenExpired = isAccessTokenExpired;
exports.setAccessToken = setAccessToken;
exports.setAccessTokenCallback = setAccessTokenCallback;
exports.setAccessTokenForPolyblogClient = exports.setAccessTokenCallbackForPolyblogClient = void 0;

var _b64Lite = require("b64-lite");

var accessToken = null;
var callback = null;

function getAccessTokenPayload() {
  var payload;

  if (accessToken) {
    try {
      payload = JSON.parse((0, _b64Lite.atob)(accessToken.split('.')[1]));
    } catch (error) {
      console.error(error);
    }
  }

  return payload;
}

function isAccessTokenExpired() {
  var isExpired = true;

  try {
    var payload = getAccessTokenPayload();
    var now = Math.floor(Date.now() / 1000);

    if (payload.exp > now) {
      isExpired = false;
    }
  } catch (error) {
    console.error(error);
  }

  return isExpired;
}

function getAccessToken() {
  return accessToken;
}

function setAccessToken(accessToken_) {
  var newAccessToken = accessToken_;

  if (accessToken !== newAccessToken) {
    accessToken = newAccessToken;

    if (callback) {
      callback(newAccessToken);
    }
  }
}

function setAccessTokenCallback(callback_) {
  callback = callback_;
}

var setAccessTokenForPolyblogClient = setAccessToken;
exports.setAccessTokenForPolyblogClient = setAccessTokenForPolyblogClient;
var setAccessTokenCallbackForPolyblogClient = setAccessTokenCallback;
exports.setAccessTokenCallbackForPolyblogClient = setAccessTokenCallbackForPolyblogClient;